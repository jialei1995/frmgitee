c# string转int
Convert.ToInt16(st)；
int.Parse(st)


foreach (var item in data); 可以直接遍历二维数组，会默认一行一行的去遍历

--------------imagelist与picturebox的关系：
imagelist是存放图片的列表属于后台控件
picture是显示图片的box，前台控件，我们可以在picturebox中去显示图片
常用：picturebox.Image = imagelist.Image[x];通过给x赋值不同让box中显示不同的图片

string path=Application.StartupPath;  这个路径对应某个目录


-------------关闭窗口提示
private void Form1_FormClosing(object sender, FormClosingEventArgs e)
{
	//DialogResult接收dialog的选择结果  			标题	是否两个按钮			是否关闭前面显示warning图标
    DialogResult dr = MessageBox.Show("是否关闭", "t提示", MessageBoxButtons.YesNo, MessageBoxIcon.Warning);
    if (dr == DialogResult.Yes)
    {
        e.Cancel = false;//FormClosingEventArgs.cancel窗口的关闭事件=false就是不关闭
    }
    else
    { 
        e.Cancel=true;//=true就是关闭
    }



----------------listview单位是ITEM
listView1.Items.Add(textBox1.Text.Trim());往listview中增加项
listView1.Items.RemoveAt(listView1.SelectedItems[0].Index);//删除listview中的选中项

---------------treeview单位是NODE

设置窗体图标：左上角的ICON  需要放置.ico文件到属性中的icon里面即可。

字符串转char数组，char数组转字符串
字符串转换成Char数组
string str="abcdefghijklmnopqretuvwxyz";
char[] chars=str.ToCharArray();

char数组转换成字符串
char[] chars=new char[]{'a','b','c','d'};
string str=new string(chars);

string转byte[]:
byte[] byteArray = System.Text.Encoding.Default.GetBytes ( str );
byte[]转string：
string str = System.Text.Encoding.Default.GetString ( byteArray );
string转ASCII byte[]:
byte[] byteArray = System.Text.Encoding.ASCII.GetBytes ( str );
ASCII byte[]转string:
string str = System.Text.Encoding.ASCII.GetString ( byteArray );


调试：逐过程-不进入函数内部
跳出：不执行函数内部的剩余代码，直接点击跳出就会回到本函数执行完的下一行。
不设置断点，直接右键有个运行到光标处，可以直接运行到光标处停止，这样就不需要打断点了。

委托与匿名方法：
委托：存放对方法的引用，内部包含一个指向某个方法的指针
[修饰符，范围，可有可无]  delegate  [返回类型] [委托名称] [参数列表]
委托的作用：在类B中使用类A中的方法，通常需要定义类A对象，然后A对象.fun() 调用
委托类型  委托对象 = 函数---这里的函数不带括号，因为不是函数的调用，只是将函数地址赋给委托。
之后调用的时候可以委托对象（入参）;
匿名方法-加委托
委托类型  委托变量 = delegate (int x,int y)
{
	return x+y;
};必须有分号，这相当于一行代码将函数赋值给委托变量
这种委托的调用： 委托变量.invoke(3,4);