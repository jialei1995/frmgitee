用户层mmap：
void *mmap(void *addr, size_t length, int prot, int flags,
            int fd, off_t offset);
内存映射函数，将文件内容映射到进程的虚拟内存空间，通过对映射后的内存
的读写修改，实现对文件的读取修改。不需要使用read write函数 也可以操作文件

offset 从文件的哪个位置开始映射，length 映射多少字节

内核层:对应设备在内核层需要为它建立虚拟地址到物理地址的页表
int(*mmap)(struct file*,struct vm_area_struct*) file_operations成员

建立页表方法：
使用 remap_pfn_range 一次构建所有页表
使用 nopage VMA 方法每次建立一个页表


x86处理器有 IO地址空间 只有64K ，
其他cpu都没有IO地址空间

访问io端口：
inb outb   8位
inw outw   16位
inl outl   32位
释放io端口：
release_region(start,n)   

访问io内存之前，要进行物理到虚拟地址映射，ioremap
取消映射：iounmap
release_mem_region(start,len)