label:显示不能编辑的文本或图像，label可以显示图像
属性：Image
事件：click（类似按钮）  TextChanged

ImageList：图片集控件
tag：与控件相关的自定义数据
enabled：是否启用 
--------------------------------TextBox：
TextBox： 单行  多行  输入信息或者获取信息
MultiLine：是否多行
WordWarp：是否可以自动换行
PasswdChar：输入是否以*显示--作密码时使用
方法：AppendText  clear  focus（获取焦点）  Select  Selectall

事件：TextChanged 

---------------------------------button
backGroudImage  Image  类似的，都不会覆盖显示的数据
BackColor 按钮背景色   ForeCloro：文字颜色


判断字符串是否为空：
string.IsNullOrEmpty(mystr);
				内容		标题		确定				内容前的icon
MessageBox.Show("请输入xx","登录页面",MessageBoxButton.OK,MessageBoxIcon.Error);

void radioButton1_CheckedChanged(object sender, EventArgs e)
{
	RadioButton rd = (RadioButton)sender;//获取发出此信号的对象，强转成某个类型
	if (rd.Checked)//调用对象的方法
	{
		MessageBox.Show("rd1 is check");
	}
}


-------------------------------------listbox--lb
items：列表中项的属性
MultiColumn：是否可以多列显示
DataSource：列表数据来源
DisplayMember
ValueMember：实际值
事件：SelectIndexChanged
方法
listBox1.Items.Clear();
listBox1.Items.Add(12);
listBox1.Items.Add("json");
string[] list = { "123", "abc", "test" };
listBox1.Items.AddRange(list);//直接增加一个string列表的内容
listBox1.Items.Insert(index, "jialei");//在index位置插入
int index = listBox1.Items.IndexOf("json");//获取数据为json 字串的index
listBox1.Items.Remove("test");//移除内容为test的项
listBox1.Items.RemoveAt(5);//移除index为5的项
bool bl=listBox1.Items.Contains("string");//判断listBox1是否包含string

为避免listbox更新数据的时候闪烁
listBox1.BeginUpdate();
//增加大量数据
listBox1.EndUpdate();

#region  注释方法
#endregion

需要引入新的类文件UserInfo.cs：  mylist里面放的是类型为UserInfo类的多个对象
List<UserInfo> mylist = new List<UserInfo>();
mylist.Add(
		new UserInfo(){  //不需要定义对象，直接新建匿名对象当入参
			id = 1,
			name = "admin"
		}
	);
listBox1.DataSource = mylist;//显示的项的来源
listBox1.DisplayMember = "name";//项显示的文本对应的属性名
listBox1.ValueMember = "id";	//项的实际值对应的属性名
如果项的实际值对应的属性是id，则当光标在admin时，listBox1.SelectedValue就是1
如果项的实际值对应的属性是name，则当光标在admin时，listBox1.SelectedValue就是”admin“

不知道变量类型，可以先用var类型来接受，等会再改成对应的类型

---------------------------------combobox的操作
与LIstBox一样存在问题：若指定了Datasource，就不能直接更改项
的集合，需要把项的集合的修改转化成对数据源的修改上
exp：
在coblist控件，增加数据源为
coblist.DataSource = mylist;//显示的项的来源
coblist.DisplayMember = "name";//项显示的文本对应的属性名
coblist.ValueMember = "id";	//项的实际值对应的属性名
所以，数据项不多的情况下，又要修改项的集合，用Item.Add添加项
事件：SelectIndexChanged
获取combobox对象中选中的item 类型转化成每个item的数据类型，再.name 
(coblist.SelectedItem as UserInfo).name
-----------------------------picturebox
Image:需要将要设置到控件的图片放到本项目的res里面
ImageLocation：通过本地图片所在的绝对路径来加载图片
---------------------------RichTextBox
插入图片：
此控件不是图片容器，不能直接放图片，需要通过剪切板
Clipboard.Clear();//清除剪切板中其他内容
Image bmp = global::test.Properties.Resources.仓储仓库;
Clipboard.SetImage(bmp);//将图片加载到剪切板中
richTextBox1.Paste();//将剪切板内容粘贴到富文本框
richTextBox1。SaveFile(@"d\xxx.rtf");//保存文件的时候保存成rtf格式
---------------------------ProgressBar进度条
progressBar1.Maximum = max;最大值
progressBar1.Step = 2;
progressBar1.Value = 0;当前值
progressBar1.PerformStep();根据step往后step跳
一般在定时器中去step增加进度条的数值
---------------------------Timer
1.System.Windows.Forms.Timer : 
	独占一个线程，即如果主线程使用Timer，Timer会阻塞主线程
	默认Enabled是不启用，在代码中去启用
	如果单词任务执行超过时间间隔，则会影响下次触发
2.Syetem.Timer.Timer  基于服务用的Timer---无法拖拽使用，得用代码创建
	时间间隔，触发Elapsed事件，
	System.Timers.Timer t = new System.Timers.Timer(1000);//实例化Timer类，设置间隔时间为10000毫秒； 
	//下面添加回调函数
	方法1：t.Elapsed += new System.Timers.ElapsedEventHandler(theout);//到达时间的时候执行theout事件； 
	方法2:t.Elapsed += theout;
	t.AutoReset = true;//设置是执行一次（false）还是一直执行(true)； 
	t.Enabled = true;//是否执行System.Timers.Timer.Elapsed事件； 

	public void theout(object source, System.Timers.ElapsedEventArgs e)
	{
		#####label2.Text = DateTime.Now.ToString();//不可以直接修改UI控件
		怎么处理呢？可以在委托中修改UI元素
	}
	
	public void theout(object source, System.Timers.ElapsedEventArgs e)
	{
		Action act = chgtime;//Action act就是委托
		this.Invoke(act, e);
	}
	private void chgtime()
	{
		label2.Text = DateTime.Now.ToString();
	}
3.Syetem.Threading.Timer	基于线程的定时器
单词运行时间过长并不会影响下次的触发，回调方法执行
System.Threading.Timer timer4 = new System.Threading.Timer(
	new System.Threading.TimerCallback(
	o => {	count += 2;
			Action act = chgtime;//将修改控件数据放到委托函数内，这个委托不传参数
			this.Invoke(act, e);}),
			null,100,1000);
 timer4 = new System.Threading.Timer(new System.Threading.TimerCallback(
                 o=> {
                    count += 2;
                    Action<int> act = chgtime;//<内是入参类型>
                    this.Invoke(act, count);//第二个参数是入参
                }),null,100,1000);
private void chgtime(int count)//委托函数传参数
{
	txtcount.Text = count.ToString();
}

------------------------------------ImageList 图片集合
与Timer一样是后台控件，不可见的控件
if (Directory.Exists(path))//判断路径是否存在
{ 
	string[] files = Directory.GetFiles(path);//获取所有的路径string
	if (files.Length > 0)//文件夹中不止一个文件
	{
		string[] filetype = { ".jpg",".png"};//类型数组
		foreach (string file in files)//遍历所有的文件夹中的文件
		{
			//如果遍历的当前文件是jpg或者png类型的文件，GetExtension获取文件类型
			if (filetype.Contains(Path.GetExtension(file)))
			{ 
				Image img = Image.FromFile(file);//定义img变量，就是图片
				//获取不带扩展名的文件名
				string keyName = Path.GetFileNameWithoutExtension(file);
				imageList1.Images.Add(keyName,img);//增加图片到ImageList的方法
			}
		}
		//怎么显示list中的图片呢？
		label1.ImageKey = "xxx";
		label1.ImageIndex = 2;
	}
}
Add(Image/Icon)  	直接增加Image
Add(keystring,Image/Icon) 键值对增加 
Contains(Image/Icon)  判断是否包含某图片
INdexOf(Image/Icon)	  获取某图片的索引
		Remove(Image)   根据图片删除
		RemoveAt(int)	根据下标删除
		RemoveByKey(string) 	根据key删除
SetKeyName(int,string)  根据索引设置key名字
-----------------------------------------布局控件  GroupBox Pannel  
类似，用一个就行分组显示


-----------------------------------------TabControl  选项卡分页-------------
****************重点理解以下的INvoke
this.Invoke(
	new Action(() =>		//不含入参的invoke
	{
		label1.Text = "当前在" + "0页面";
	})
);

//含入参的invoke
this.Invoke(new Action<int>((rucan) =>
{
	label1.Text = "当前在" + rucan + "页面";
}),index);
其中index是传进来给匿名函数的实际的入参，下面这团是Invoke的第一个参数，直接写的匿名函数
new Action<int>((rucan) =>				//int是入参类型，rucan是函数的虚入参
{
	label1.Text = "当前在" + rucan + "页面";
})


---------------------------------------------表格 DataGridView
常用事件
CellClick  			单击单元格
CellContentClick	单击单元格中的内容才能触发
CellValueChanged 	失去焦点时才触发--不好
CurrentCellDirtStateChanged	单元格状态因其内容更改时发生
private void DgvUsers_CellContentClick(object sender,DataGridViewCellEventArgs e)
{
	//定位发生内容改变的单元格
	DataGridView cell = DgvUsers.Rows[e.RowIndex].Cells[e.ColumnIndex];
	if(cell.FormattedValue.Tostring()=="删除")
	{}else
	{}
}

往DataGridView插入列
DataGridViewTextBoxColumn coll = new DataGridViewTextBoxColumn();
coll.Name = "colCHOSE";
coll.HeaderText = "选择";
dataGridView2.Columns.Add(coll);

DataGridViewTextBoxColumn coll2 = new DataGridViewTextBoxColumn();
coll2.Name = "colID";
coll2.HeaderText = "编号";
dataGridView2.Columns.Add(coll2);

DataGridViewTextBoxColumn coll3 = new DataGridViewTextBoxColumn();
coll3.Name = "colNAME";
coll3.HeaderText = "姓名";
dataGridView2.Columns.Add(coll3);

DataGridViewTextBoxColumn coll4 = new DataGridViewTextBoxColumn();
coll4.Name = "colDEL";
coll4.HeaderText = "删除";
dataGridView2.Columns.Add(coll4);

//往DataGridView插入行，需要先将行里面需要写的数据都填完，最后将行DataGridViewRow ADD到表格中
DataGridViewRow dr = new DataGridViewRow();//新建行
DataGridViewCheckBoxCell cell1 = new DataGridViewCheckBoxCell();//第一个单元格放的是checkbox
cell1.Value = true;
DataGridViewTextBoxCell cell2 = new DataGridViewTextBoxCell();//第2个单元格放的是文本
cell2.Value = "15";
DataGridViewTextBoxCell cell3 = new DataGridViewTextBoxCell();
cell3.Value = "admin";

DataGridViewLinkCell cell4 = new DataGridViewLinkCell();//第4个单元格放的是链接文本
cell4.Value = "删除";
dr.Cells.Add(cell1);//将4个单元格都加入DataGridViewRow dr中
dr.Cells.Add(cell2);
dr.Cells.Add(cell3);
dr.Cells.Add(cell4);
//将dr add到单元格的行中
dataGridView2.Rows.Add(dr);